var mdList_1=mdList;function mdList(a,b={},c=0){const{getRef:d=_getRef,getText:e=_getText,type:f='ol'}=b;return a.reduce((a,[g,h],j)=>{if(!g)return a;const i=' '.repeat(4*c),k='ol'===f?`${j+1}.`:'*',l=e(g),m=d(l),n=`${i}${k} [${l}](#${m})`;return a.push(n),h&&a.push(mdList(h,b,c+1)),a},[]).join('\n')}function _getText(a){return a.replace(/^#+ +/,'').replace(/\[(.+?)\]\(.+?\)/,'$1')}function _getRef(a){return a.trim().toLowerCase().replace(/[^\w\- ]+/g,'').replace(/\s/g,'-')}var takeWhile_1=takeWhile;function takeWhile(a,b,c=0){return c<b.length&&a(b[c],c,b)?takeWhile(a,b,++c):b.slice(0,c)}var tree_1=tree;function tree([a,...b],c){const d=takeWhile_1(c.bind(null,a),b),e=d.length?[a,tree(d,c)]:[a];return b.length-d.length?[e,...tree(b.slice(d.length),c)]:[e]}var mdToc_1=mdToc;function mdToc(a,b={}){const{compare:c=_compare,extract:d=_extract,target:e=/^TOC$/m}=b;return a.replace(e,mdList_1(tree_1(d(a),c),b))}function _extract(a,b=/^#+ .*$/gm){return a.replace(/```[\S\s]+?```/g,'').match(b)||[]}function _compare(a,b){const c=/^#+/;return b.match(c)[0]>a.match(c)[0]}var simpletocMd={mdList:mdList_1,mdToc:mdToc_1,tree:tree_1};export default simpletocMd;

